.. _api-cmd-coldcontrol:

Cold Control
====================================

콘텐츠가 많으면 많을수록 관리(Purge등)이 증가한다. 
자주 접근되어 메모리 상주하는(=Hot영역) 파일을 Purge하는데 드는 비용이 1이라면 
디스크에 상주하는(=Cold영역)에서는 1,000이 든다. 

명확한 URL에 의한 Purge등의 API호출은 항상 빠르다.
하지만 디렉토리/패턴 등의 범위 비용은 의도치 않게 디스크 부하를 증가시켜 서비스 장애를 발생시킬 수 있다.

예를 들어 관리자가 /img/ 경로를 Purge했을 때 만약 Cold영역(Disk)에 10만개의 파일이 존재하고 있다면 Purge가 언제 끝날지 알 수 없다. 
디스크 I/O의 급격한 증가와 함께 서비스 품질이 저하되는 것이다. 
이런 상황을 방지하기 위해 ``<ColdControl>`` 이 존재한다. ::

   # server.xml - <Server><VHostDefault>
   # vhosts.xml - <Vhosts><Vhost>
   
   <ColdControl>
      <Purge>OFF</Purge>
      <Expire>OFF</Expire>
      <ExpireAfter>OFF</ExpireAfter>
      <Cold2Hot Value="0">NONE</Cold2Hot>
   </ColdControl>   

-  ``<Purge> (기본: OFF)`` 
   
   ``ON`` 이라면 Cold영역의 파일도 `Purge`_ 한다.
   
-  ``<Expire> (기본: OFF)`` 

   ``ON`` 이라면 Cold영역의 파일도 `Expire`_ 한다.
   
-  ``<ExpireAfter> (기본: OFF)`` 

   ``ON`` 이라면 Cold영역의 파일도 `ExpireAfter`_ 한다.
   
-  ``<Cold2Hot> (기본: NONE)`` 

   Cold영역의 파일을 서비스하기 위해 Hot영역으로 옮길 때 동작방식을 설정한다.
   
   -  ``NONE`` 아무 동작도 하지 않는다.
   -  ``expire`` TTL을 만료시킨다. (서비스 전 원본서버로부터 변경여부를 확인한다.)
   -  ``purge`` 원본서버로부터 다시 다운로드 받는다. (원본서버 장애 시 해당 파일로 서비스한다.)
   -  ``expireafter`` 현재 시간부터 ``Value (단위: 초)`` 속성만큼 TTL을 설정한다.

.. note::

   서비스 상태에서 `Purge`_ 등의 관리 API를 호출하실 때는 반드시 명확한 URL로 호출할 것을 강력히 권장한다.
   디렉토리 또는 패턴은 관리용도로만 한정하는 것이 적합하다.









.. _adv_topics_disk_overload:

I/O 과부하
====================================

처리할 수 있는 능력보다 클라이언트 요청이 많을 경우 과부하(Overload) 상태가 된다.
시스템 자원 모두 과부하 상태에 빠질 수 있지만, 대부분은 디스크 I/O 부하 다.
이로 인해 퍼포먼스 저하가 발생하는데 출근길 rush hour상황과 유사하다.

I/O와 관려되었기 때문에 :ref:`env-cache-storage` 에 설정한다. ::

    # server.xml - <Server><Cache>
   
    <Storage DiskOverloadTime="3000"> ... </Storage>
    
-  ``DiskOverloadTime (기본: 3000 ms)``

   단위 작업의 처리속도가 일정 시간을 넘을 경우 과부하 상태로 판단한다.
   
관련 로그는 :ref:`admin-log-info` 에 남는다. ::

   Disk-overload mode activated. (Time: 3000 ms, Default-Policy: refuse)
   Disk-overload mode inactivated.
   
이때 이미 메모리에 적재된 Hot콘텐츠는 정상적으로 서비스되지만 Cold/신규 콘텐츠는 가상호스트 정책을 따른다. ::

   # server.xml - <Server><VHostDefault><Options>
   # vhosts.xml - <Vhosts><Vhost><Options>

   <OnDiskOverload>refuse</OnDiskOverload>

-  ``<OnDiskOverload>``

   I/O 과부하 상태에서 Hot이 아닌 콘텐츠의 처리 정책을 설정한다.
   
   - ``refuse (기본)`` 처리하지 않고 **503 Service Unavailable** 로 응답한다.
   - ``bypass`` 원본으로 바이패스한다.
   - ``proceed`` 처리될 때까지 기다린다.

.. note::

   ``<OnDiskOverload>`` 정책을 수립할 때 Worst Case를 고려해야 한다.

   - ``refuse (기본)`` 클라이언트가 정상적인 서비스를 받지 못한다.
   - ``bypass`` 원본으로 너무 많은 클라이언트가 유입된다.
   - ``proceed`` 대기 중인 작업이 너무 많아져서 시스템 이상이 발생한다.